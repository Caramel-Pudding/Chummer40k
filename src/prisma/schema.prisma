datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")

  @@map(name: "users")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")


  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

model Weapon {
  id          Int           @id @default(autoincrement())
  name        String
  class       WeaponClass
  damage      String
  penetration Int
  range       Int?
  rateOfFire  String?
  clip        Int?
  reload      WeaponReload?
  special     String?
  weight      Int
  avalibility Avalibility
}

model Armor {
  id          Int           @id @default(autoincrement())
  name        String
  AP          Int
  Locations   HitLocation[]
  special     String?
  weight      Int
  avalibility Avalibility
}

model Item {
  id          Int         @id @default(autoincrement())
  name        String
  special     String
  weight      Int
  avalibility Avalibility
}

enum WeaponClass {
  MELEE
  PISTOL
  BASIC
  HEAVY
  THROWN
}

enum Avalibility {
  UBIQUITOUS
  ABUNDANT
  PLENTIFUL
  COMMON
  AVERAGE
  SCARCE
  RARE
  VR
  ER
  NU
  UNIQUE
}

enum Craftsmanship {
  POOR
  COMMON
  GOOD
  BEST
}

enum WeaponReload {
  FREE
  HALF
  FULL
  TWOFULL
  THREEFULL
  FOURFULL
}

enum HitLocation {
  HEAD
  LARM
  TORSO
  RARM
  LLEG
  RLEG
}
